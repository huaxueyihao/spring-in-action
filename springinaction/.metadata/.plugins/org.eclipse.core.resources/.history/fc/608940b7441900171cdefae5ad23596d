<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    	http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
    
    
	 <!--注解形式的 组件扫描 -->
	 <!-- <context:component-scan 
    	base-package="com.springinaction.springidol"></context:component-scan>
	  -->
	 
	 <!--基于dbcp 配置数据源 -->
	 <!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
	 	<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
	 	<property name="url" value="jdbc:mysql://localhost:3306/test"></property>
	 	<property name="username" value="root"></property>
	 	<property name="password" value="mysql"></property>
	 	<property name="initialSize" value="5"></property>
	 	<property name="maxActive" value="10"></property>
	 </bean> -->
	 
	 <!--基于jdbc 配置数据源 -->
	 <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	 	<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
	 	<property name="url" value="jdbc:mysql://localhost:3306/test"></property>
	 	<property name="username" value="root"></property>
	 	<property name="password" value="mysql"></property>
	 	<!-- <property name="initialSize" value="5"></property>
	 	<property name="maxActive" value="10"></property> -->
	 </bean>
	
	<!-- 使用SimpleJdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
		<constructor-arg ref="dataSource"/>
	</bean>
	
	<!-- dao层 -->
	<bean id="jdbcUserDao" class="com.springinaction.dao.impl.JdbcUserDao">
		<property name="jdbcTemplate" ref="jdbcTemplate"></property>
	</bean>
	
	<!-- jdbc的事务bean -->
	<bean id="transationManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- hibernate 的事务，需要一个session工厂 -->
<!-- 	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean> -->
	
	
	
	
	<!-- 配置mybatis的sqlSessionFactory,他有三个属性，需要配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 对model包线下面的类起别名，在mapper文件中可以直接使用类名对应一个类型 -->
		<property name="typeAliasesPackage" value="com.springinaction.model"></property>
		<property name="dataSource" ref="dataSource"></property>
		<!-- 配置mapper文件的位置 -->
		<property name="mapperLocations" value="classpath:com/springinaction/dao/*Mapper.xml"></property>
	</bean>
	<!-- 根据sqlSessionFactory和mapper生成dao的实现 -->
	<bean id="userDao" class="org.mybatis.spring.mapper.MapperFactoryBean<T>">
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
		<property name="mapperInterface" value="com.springinaction.dao.IUserDao"></property>
	</bean>
	
	<!-- 这里只是配置了一个事务的通知，应用在哪些方法上，以及传播行为 -->
	<tx:advice id="txAdvice">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.springinaction.service.IUserService.* (..))"/>
	</aop:config>
	
	<!-- 配置userService bean -->
	<bean id="userService" class="com.springinaction.service.impl.UserServiceImpl">
		<property name="userDao" ref="userDao"></property>
	</bean>
	
	
</beans>