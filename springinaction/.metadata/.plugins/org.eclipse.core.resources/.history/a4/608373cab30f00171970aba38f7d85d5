<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    	http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
    
     
     <!--观众的bean  -->
	<!--  <bean id="audience"
	 		class="com.springinaction.springidol.Audience"></bean> -->
	 <!--注解形式的 组件扫描 -->
	 <context:component-scan 
    	base-package="com.springinaction.springidol"></context:component-scan>
	 
	 <!-- 声明aop -->
	 <!-- 
	 	 <aop:config>顶层的AOP配置元素，大多数<aop:*>都包在这个元素内
	  -->
	<!--  <aop:config>
	 	引用audience Bean
	 		<aop:aspect>定义切面的元素
	 	
	 	<aop:aspect ref="audience">
	 		
	 		表演之前
	 		<aop:before>定义aop前置通知 
	 			pointcut=""是切点表达式，和method=""一起用，告诉通知切点在哪
	 			整个标签表达出 在哪个类的那个方法执行什么通知
	 		
	 		<aop:before 
	 			pointcut="execution(* com.springinaction.springidol.Performer.perform(..))" method="takeSeats"/>
	 		
	 		表演之后  
			<aop:before 
				pointcut="execution(* com.springinaction.springidol.Performer.perform(..))"
				 method="turnOffCellPhones"/>	 		
	 		
	 		表演之后
	 		<aop:after-returning>定义aop返回通知
	 		<aop:after-returning
				pointcut="execution(* com.springinaction.springidol.Performer.perform(..))"
				 method="applaud"/>	 		
	 		
	 		表演失败之后
	 		<aop:after-throwing>定义aop异常通知
	 		<aop:after-throwing 
				pointcut="execution(* com.springinaction.springidol.Performer.perform(..))"
				 method="demandRefund"/>			
	 	
	 	</aop:aspect>
	 </aop:config> -->
	 
	 
	 <!-- 上面配置aop的切点表达式是一样的，所以可以写成如下配置 -->
	 <aop:config>
	 	<!-- 引用audience Bean -->
	 	<aop:aspect ref="audience">
	 		<!-- 定义切点表达式 -->
	 		<aop:pointcut id="performance" expression="execution(* com.springinaction.springidol.Performer.perform(..))" />
	 		<!-- 表演之前-->
			<!-- <aop:before 
				pointcut-ref="performance"
				 method="takeSeats"/> -->
	 		<!-- 表演之前-->
			<!-- <aop:before 
				pointcut-ref="performance"
				 method="turnOffCellPhones"/>	 --> 		
	 		<!-- 
	 		表演之后
	 		<aop:after-returning>定义aop返回通知 -->
	 		<!-- <aop:after-returning
				pointcut-ref="performance"
				 method="applaud"/>	  -->		
	 		
	 		<!-- 表演失败之后
	 		<aop:after-throwing>定义aop异常通知 -->
	 		<!-- <aop:after-throwing 
				pointcut-ref="performance"
				 method="demandRefund"/>	 -->		
	 		
	 		<!-- 环绕通知 
	 			将其他通知都注释
	 		-->
	 		<aop:around 
	 			pointcut-ref="performance"
	 			method="watchPerformance"/>
	 	/aop:aspect> 
	 	
	 	<aop:aspect ref="magician">
	 		<aop:pointcut 
	 			id="thinking"
	 			expression="execution(* com.springinaction.springidol.Thinker.thinkOfSomething(String)) and args(thoughts)" />
	 		
	 		<aop:before 
	 			pointcut-ref="thinking" 
	 			method="interceptThoughts" 
	 			arg-names="thoughts"/>
	 	
	 	</aop:aspect>
	 </aop:config>
	 
	 <bean id="volunteer" class="com.springinaction.springidol.Volunteer"></bean>
	 <bean id="magician" class="com.springinaction.springidol.Magician"></bean>
	
</beans>