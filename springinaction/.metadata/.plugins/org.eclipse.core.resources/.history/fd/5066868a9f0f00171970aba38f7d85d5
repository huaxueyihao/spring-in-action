package com.springinaction.springidol;

import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Method;
import java.lang.reflect.Proxy;

/**
 * 
 * @ClassName: ProxyFactory 
 * @Description: 代理工厂
 * @author mao
 * @date 2017年3月23日 下午3:38:31 
 *
 */
public class ProxyFactory {
	
	//目标对象
	private static Object target;
	private static Audience audience;
	
	//生成代理对象的方法
	public static Object getProxyInstance(Object target_,Audience audience_){
		target = target_;
		audience = audience_;
		
		return Proxy.newProxyInstance(
				target.getClass().getClassLoader(),
				target.getClass().getInterfaces(),
				new InvocationHandler() {
					
					public Object invoke(Object proxy, Method method, Object[] args)
							throws Throwable {
						audience.takeSeats();
						
						Object result = method.invoke(target, args);
						
						return result;
					}
				});
		
	}
	
	
	
}
